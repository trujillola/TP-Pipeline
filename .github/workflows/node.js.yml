# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults : 
      run: 
        working-directory : helloworld
    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0
      with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}
          
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.0
      with: 
        node-version: ${{ matrix.node }}
    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules # ðŸ‘ˆ path for node_modules folder
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        # ðŸ‘† name of the chache key includes package-lock.json
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Dependencies
      if:
        steps.cache-nodemodules.outputs.cache-hit != 'true'
        # ðŸ‘† if cache hits the skip this step.
      run: npm ci
    - run: npm run build --if-present
    - run: npm test -- --watch=false --browsers=ChromeHeadless
    
    - name: Deploy to GitHub Pages
      uses: crazy-max/ghaction-github-pages@v3
      with:
        target_branch: gh-pages
        build_dir: dist/weather-app
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
